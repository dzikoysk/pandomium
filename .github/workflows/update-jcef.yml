name: Update JCEF

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person to greet'
        # Default value if no value is explicitly provided
        default: 'World'
        # Input has to be provided for the workflow to run
        required: true

jobs:
  Update-JCEF:
    runs-on: ubuntu-latest
    steps:
    
      - name: Clone pandonium repository
        uses: actions/checkout@v2
        
      - name: Check if curl is installed
        run: curl --help
        
      - name: Check if grep is installed
        run: grep --help
      
      
      # Use curl to get the JSON response for the latest release
      # Use grep to find the line containing file URL
      # Use cut and tr to extract the URL
      # Use wget to download it
      #| tar xvz -C ./extract-dir
      - name: Download latest stable JCEF builds
        run: |
          download() {
          cd ${{ github.workspace }} 
          URL=$(curl -L -s https://api.github.com/repos/jgm/pandoc/releases/latest | grep -o -E "https://github.com/jcefbuild/jcefbuild/releases/download/.*zip")
          echo $URL
          curl -L -s $URL 
          ls
          }
          trap download 0

          error() {
          local parent_lineno="$1"
          local message="$2"
          local code="${3:-1}"
          if [[ -n "$message" ]] ; then
          echo "Error on or near line ${parent_lineno}: ${message}; exiting with status ${code}"
          else
          echo "Error on or near line ${parent_lineno}; exiting with status ${code}"
          fi
          exit "${code}"
          }
          trap 'error ${LINENO}' ERR

      
      # Maybe create a pandonium release instead and attach the jcef builds to it, instead of doing the below
      - name: Commit changes
        run: |
          git config --global user.name 'Update-JCEF-Action'
          git config --global user.email 'Update-JCEF-Action@users.noreply.github.com'
          git commit -am "Updated JCEF builds."
          git push
